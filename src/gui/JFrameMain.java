/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import connections.PriceConnection;
import connections.data.TransactionCollector;
import data.Prices;
import data.handler.EMAHandler;
import data.handler.LWMAHandler;
import data.handler.PriceHandler;
import data.handler.SMAandTMAHandler;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;

/**
 *
 * @author headyin
 */
public class JFrameMain extends javax.swing.JFrame {
    
    PriceConnection priceConnection;
    Prices prices;
    TransactionCollector STMAtransactionCollector;
    TransactionCollector EMAtransactionCollector;
    TransactionCollector LWMAtransactionCollector;
    TransactionCollector transactions;
    PriceHandler priceHandler;
    SMAandTMAHandler STHandler;
    EMAHandler emaHandler;
    LWMAHandler lwmaHandler;
    Thread tPriceHandler;
    Thread tSTHandler;
    Thread tEmaHandler;
    Thread tLwmaHandler;
    String serverName;
    int pricePort;
    int tradePort;
    LineChartSMA lineChartSMA;
    LineChartTMA lineChartTMA;
    LineChartEMA lineChartEMA;
    LineChartLWMA lineChartLWMA;
    Thread tLineChartSMA;
    Thread tLineChartTMA;
    Thread tLineChartEMA;
    Thread tLineChartLWMA;
    boolean psma,plwma,ptma,pema;
    
    /**
     * Creates new form JFrameMain
     */
    public JFrameMain() throws IOException {
        initComponents();
        setLocationRelativeTo(null);
        this.jButtonReport.setEnabled(false);
        psma = false;
        ptma= false;
        plwma = false;
        pema = false;

    }
 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextFieldServerName = new javax.swing.JTextField();
        jTextFieldPricePort = new javax.swing.JTextField();
        jTextFieldTradePort = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Start = new javax.swing.JButton();
        jButtonReport = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Please setup server information");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocationByPlatform(true);
        setPreferredSize(new java.awt.Dimension(500, 400));
        setResizable(false);

        jTextFieldServerName.setText("localhost");
        jTextFieldServerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldServerNameActionPerformed(evt);
            }
        });

        jTextFieldPricePort.setText("4000");

        jTextFieldTradePort.setText("4001");

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("mxExchange Server Name or IP:");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Price Feed Port:");
        jLabel2.setToolTipText("");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Trade/Booking Port:");

        Start.setText("Start");
        Start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartActionPerformed(evt);
            }
        });

        jButtonReport.setText("Report");
        jButtonReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReportActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Plot  SMA");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Plot LWMA");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jCheckBox3.setText("Plot  EMA");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        jCheckBox4.setText("Plot TMA");
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldServerName, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                            .addComponent(jTextFieldPricePort, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                            .addComponent(jTextFieldTradePort))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonReport, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Start, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jCheckBox1)
                        .addGap(10, 10, 10)
                        .addComponent(jCheckBox2)
                        .addGap(10, 10, 10)
                        .addComponent(jCheckBox3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox4)))
                .addContainerGap(101, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 152, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(204, 204, 204))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldServerName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Start, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonReport, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextFieldPricePort, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                            .addComponent(jTextFieldTradePort))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBox1)
                            .addComponent(jCheckBox2)
                            .addComponent(jCheckBox3)
                            .addComponent(jCheckBox4))))
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void StartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartActionPerformed
        serverName = this.jTextFieldServerName.getText();
        pricePort = Integer.parseInt(this.jTextFieldPricePort.getText());
        tradePort = Integer.parseInt(this.jTextFieldTradePort.getText());
        
        priceConnection = new PriceConnection(serverName, pricePort);
        prices = new Prices();
        STMAtransactionCollector = new TransactionCollector();
        EMAtransactionCollector = new TransactionCollector();
        LWMAtransactionCollector = new TransactionCollector();
        priceHandler = new PriceHandler(priceConnection, prices);
        STHandler = new SMAandTMAHandler(serverName, tradePort, 
                prices,STMAtransactionCollector);
        emaHandler = new EMAHandler(serverName, tradePort, 
                prices,EMAtransactionCollector);
        lwmaHandler = new LWMAHandler(serverName, tradePort, 
                prices,LWMAtransactionCollector);        
        tPriceHandler = new Thread(priceHandler);
        tSTHandler = new Thread(STHandler);
        tEmaHandler = new Thread(emaHandler);
        tLwmaHandler = new Thread(lwmaHandler);
        lineChartSMA = new LineChartSMA(prices, STHandler.getSMA());
        tLineChartSMA = new Thread(lineChartSMA);
        lineChartEMA = new LineChartEMA(prices, emaHandler.getEMA());
        tLineChartEMA = new Thread(lineChartEMA);
        lineChartTMA = new LineChartTMA(prices, STHandler.getTMA());
        tLineChartTMA = new Thread(lineChartTMA);
        lineChartLWMA = new LineChartLWMA(prices, lwmaHandler.getLWMA());
        tLineChartLWMA = new Thread(lineChartLWMA);
        
        this.tEmaHandler.start();
        this.tLwmaHandler.start();
        this.tSTHandler.start();
        this.tPriceHandler.start();
        
        if (psma) {
            this.tLineChartSMA.start();
        }
        if (plwma) {
            this.tLineChartLWMA.start();
        }
        if (pema) {
            this.tLineChartEMA.start();
        }
        if (ptma) {
            this.tLineChartTMA.start();
        }
        
        try {
            //this.tEmaHandler.join();
            this.tSTHandler.join();
            //this.tLwmaHandler.join();
           // this.tPriceHandler.join(); 
        } catch (InterruptedException ex) {
            //Logger.getLogger(JFrameMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.jButtonReport.setEnabled(true);
        
    }//GEN-LAST:event_StartActionPerformed

    private void jButtonReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReportActionPerformed
        this.transactions = new TransactionCollector();
        this.transactions.addTransactions(this.STMAtransactionCollector);
        this.transactions.addTransactions(this.EMAtransactionCollector);
        this.transactions.addTransactions(this.LWMAtransactionCollector);
        this.transactions.saveToFile();
        System.out.println(this.transactions.postToServer());
        this.jLabel4.setText("Json file saved at local folder!");
    }//GEN-LAST:event_jButtonReportActionPerformed

    private void jTextFieldServerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldServerNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldServerNameActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        psma = !psma;
        if (!numberTrueCheck()) {
            this.jCheckBox1.setSelected(false);
            psma = !psma;
        }
       // System.out.println(psma);
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
         plwma = !plwma;
        if (!numberTrueCheck()) {
            this.jCheckBox2.setSelected(false);
            plwma = !plwma;
        }
       // System.out.println(plwma);
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        // TODO add your handling code here:
        pema = !pema;
        if (!numberTrueCheck()) {
            this.jCheckBox3.setSelected(false);
            pema = !pema;
        }
        //System.out.println(pema);
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        // TODO add your handling code here:
         ptma = !ptma;
        if (!numberTrueCheck()) {
            this.jCheckBox4.setSelected(false);
            ptma = !ptma;
        }
        //System.out.println(ptma);
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private boolean numberTrueCheck() {
        int i = 0;
        if (psma) {
            i++;
        }
        if (ptma) {
            i++;
        }
        if (plwma) {
            i++;
        }
        if (pema) {
            i++;
        }
        if (i > 2) {
            return false;
        }else {
            return true;
        }
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new JFrameMain().setVisible(true);
                } catch (IOException ex) {
                    //Logger.getLogger(JFrameMain.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Start;
    private javax.swing.JButton jButtonReport;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldPricePort;
    private javax.swing.JTextField jTextFieldServerName;
    private javax.swing.JTextField jTextFieldTradePort;
    // End of variables declaration//GEN-END:variables
}
